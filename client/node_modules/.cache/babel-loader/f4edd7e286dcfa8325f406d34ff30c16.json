{"ast":null,"code":"var _jsxFileName = \"/Users/iden/Desktop/carillon_codestates/client/src/components/ConvertToPDF.js\";\nimport React, { useRef } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport './ConvertToPDF.css';\nimport MainInfo from './MainInfo';\n\nconst ConvertToPDF = () => {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pdf-btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"pdf-btn\",\n    onClick: handlePrint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"PDF & \\uD504\\uB9B0\\uD2B8\")), /*#__PURE__*/React.createElement(MainInfo, {\n    ref: componentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ConvertToPDF; // let law = JSON.parse(localStorage.Law);\n\n/* let { Chapter } = law;\n Chapter = Chapter.map((chapEle, chapEleIndex) => (\n   <div key={chapEleIndex}>\n     <h1 className='pdf-title'>{chapEle.context}</h1>\n     <h2 className='pdf-title'>{chapEle.date}</h2>\n     {chapEle.Article &&\n       chapEle.Article.map((artEle, artEleIndex) => (\n         <div key={artEleIndex}>\n           <h3 className='pdf-article-title'>\n             {artEle.article_title}&nbsp;&nbsp;\n           </h3>\n           <p>\n             <span>{artEle.context}</span>\n             <span className='pdf-date'>{artEle.cont_date}</span>\n           </p>\n           {artEle.Clause &&\n             artEle.Clause.map((claEle, claEleIndex) => (\n               <div key={claEleIndex}>\n                 <span className='pdf-clause-context'>\n                   {claEle.context}\n                   <span className='pdf-date'>{claEle.date}</span>\n                 </span>\n                 {claEle.subPara &&\n                   claEle.subPara.map((subEle, subEleIndex) => (\n                     <div key={subEleIndex}>\n                       <span className='pdf-sub-context'>\n                         {subEle.context}\n                       </span>\n                       <span className='pdf-date'>{subEle.date}</span>\n                       {subEle.Item &&\n                         subEle.Item.map((itEle, itEleIndex) => {\n                           if (itEle.context.includes('http')) {\n                             return (\n                               <img\n                                 key={itEleIndex}\n                                 className='pdf-img'\n                                 src={itEle.context}\n                                 alt={itEle.context}\n                               ></img>\n                             );\n                           } else {\n                             return (\n                               <div key={itEleIndex}>\n                                 <span className='pdf-item-context'>\n                                   {itEle.context}\n                                 </span>\n                                 <span className='pdf-date'>{itEle.date}</span>\n                               </div>\n                             );\n                           }\n                         })}\n                     </div>\n                   ))}\n               </div>\n             ))}\n           <p className='pdf-date'>{artEle.date}</p>\n         </div>\n       ))}\n   </div>\n ));*/\n\n/*\n  <div>\n      <div style={{ position: 'absolute', top: 0 }}>\n          <div className='pdf-container'>\n            <div className='pdf-law-head'>\n              <h1>{law.name}</h1>\n              <p className='pdf-date'>\n                [시행 {format(new Date(law.enforcement_date), 'yyyy.MM.dd.')}] [\n                {law.type}&nbsp;\n                {law.number}호,&nbsp;\n                {format(new Date(law.promulgation_date), 'yyyy.MM.dd.')}\n                ,&nbsp;\n                {law.amendment_status}]\n              </p>\n            </div>\n            {Chapter}\n          </div>\n      </div>\n    </div> */","map":{"version":3,"sources":["/Users/iden/Desktop/carillon_codestates/client/src/components/ConvertToPDF.js"],"names":["React","useRef","useReactToPrint","MainInfo","ConvertToPDF","componentRef","handlePrint","content","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAMK,WAAW,GAAGJ,eAAe,CAAC;AAClCK,IAAAA,OAAO,EAAE,MAAMF,YAAY,CAACG;AADM,GAAD,CAAnC;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAEF,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,CADF,eAIE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAED,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAdD;;AAgBA,eAAeD,YAAf,C,CAEA;;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useRef } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport './ConvertToPDF.css';\nimport MainInfo from './MainInfo';\n\nconst ConvertToPDF = () => {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n \n  return (\n    <span>\n      <span className='pdf-btn-wrapper'>\n      <button className='pdf-btn' onClick={handlePrint}>PDF & 프린트</button>\n      </span>\n      <MainInfo ref={componentRef} />\n    </span>\n  );\n};\n\nexport default ConvertToPDF;\n\n// let law = JSON.parse(localStorage.Law);\n /* let { Chapter } = law;\n  Chapter = Chapter.map((chapEle, chapEleIndex) => (\n    <div key={chapEleIndex}>\n      <h1 className='pdf-title'>{chapEle.context}</h1>\n      <h2 className='pdf-title'>{chapEle.date}</h2>\n      {chapEle.Article &&\n        chapEle.Article.map((artEle, artEleIndex) => (\n          <div key={artEleIndex}>\n            <h3 className='pdf-article-title'>\n              {artEle.article_title}&nbsp;&nbsp;\n            </h3>\n            <p>\n              <span>{artEle.context}</span>\n              <span className='pdf-date'>{artEle.cont_date}</span>\n            </p>\n            {artEle.Clause &&\n              artEle.Clause.map((claEle, claEleIndex) => (\n                <div key={claEleIndex}>\n                  <span className='pdf-clause-context'>\n                    {claEle.context}\n                    <span className='pdf-date'>{claEle.date}</span>\n                  </span>\n                  {claEle.subPara &&\n                    claEle.subPara.map((subEle, subEleIndex) => (\n                      <div key={subEleIndex}>\n                        <span className='pdf-sub-context'>\n                          {subEle.context}\n                        </span>\n                        <span className='pdf-date'>{subEle.date}</span>\n                        {subEle.Item &&\n                          subEle.Item.map((itEle, itEleIndex) => {\n                            if (itEle.context.includes('http')) {\n                              return (\n                                <img\n                                  key={itEleIndex}\n                                  className='pdf-img'\n                                  src={itEle.context}\n                                  alt={itEle.context}\n                                ></img>\n                              );\n                            } else {\n                              return (\n                                <div key={itEleIndex}>\n                                  <span className='pdf-item-context'>\n                                    {itEle.context}\n                                  </span>\n                                  <span className='pdf-date'>{itEle.date}</span>\n                                </div>\n                              );\n                            }\n                          })}\n                      </div>\n                    ))}\n                </div>\n              ))}\n            <p className='pdf-date'>{artEle.date}</p>\n          </div>\n        ))}\n    </div>\n  ));*/\n/*\n  <div>\n      <div style={{ position: 'absolute', top: 0 }}>\n          <div className='pdf-container'>\n            <div className='pdf-law-head'>\n              <h1>{law.name}</h1>\n              <p className='pdf-date'>\n                [시행 {format(new Date(law.enforcement_date), 'yyyy.MM.dd.')}] [\n                {law.type}&nbsp;\n                {law.number}호,&nbsp;\n                {format(new Date(law.promulgation_date), 'yyyy.MM.dd.')}\n                ,&nbsp;\n                {law.amendment_status}]\n              </p>\n            </div>\n            {Chapter}\n          </div>\n      </div>\n    </div> */"]},"metadata":{},"sourceType":"module"}