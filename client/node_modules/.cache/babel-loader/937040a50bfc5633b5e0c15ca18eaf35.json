{"ast":null,"code":"import _toConsumableArray from\"/Users/iden/Desktop/Projects/carillon_codestates/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/iden/Desktop/Projects/carillon_codestates/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iden/Desktop/Projects/carillon_codestates/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/iden/Desktop/Projects/carillon_codestates/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/iden/Desktop/Projects/carillon_codestates/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./Pagination.css';var defaultProps={initialPage:1,pageSize:5};var Pagination=/*#__PURE__*/function(_React$Component){_inherits(Pagination,_React$Component);var _super=_createSuper(Pagination);function Pagination(props){var _this;_classCallCheck(this,Pagination);_this=_super.call(this,props);_this.state={pager:{}};return _this;}_createClass(Pagination,[{key:\"componentDidMount\",value:function componentDidMount(){// 데이터 배열이 있을 때, 페이지 셋업\nif(this.props.items&&this.props.items.length){this.setPage(this.props.initialPage);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){// 데이터 배열이 변하면 페이지도 리셋\nif(this.props.items!==prevProps.items){this.setPage(this.props.initialPage);}}},{key:\"setPage\",value:function setPage(page){var _this$props=this.props,items=_this$props.items,pageSize=_this$props.pageSize;var pager=this.state.pager;if(page<1||page>pager.totalPages){return;}// specified page를 위한 페이저 객체\npager=this.getPager(items.length,page,pageSize);// 데이터 배열에서 나온 데이터들을 위한 새로운 페이지 만들기\nvar pageOfItems=items.slice(pager.startIndex,pager.endIndex+1);this.setState({pager:pager});// 부모 컴포넌트에서 페이지바꾸기 함수 불러오기\nthis.props.onChangePage(pageOfItems);}},{key:\"getPager\",value:function getPager(totalItems,currentPage,pageSize){var defaultNum=10;currentPage=currentPage||1;pageSize=pageSize||defaultNum;// 전체 페이지 계산\nvar totalPages=Math.ceil(totalItems/pageSize);var startPage,endPage;if(totalPages<=defaultNum){startPage=1;endPage=totalPages;}else{// 페이지 개수 10보다 많으면 개산하고 엔드 페이지\nif(currentPage<=6){startPage=1;endPage=defaultNum;}else if(currentPage+4>=totalPages){startPage=totalPages-9;endPage=totalPages;}else{startPage=currentPage-5;endPage=currentPage+4;}}// 데이터 인덱스 엔드\nvar startIndex=(currentPage-1)*pageSize;var endIndex=Math.min(startIndex+pageSize-1,totalItems-1);// 페이지 배열 생성 -> 페이저에서 반복안되게\nvar pages=_toConsumableArray(Array(endPage+1-startPage).keys()).map(function(i){return startPage+i;});//페이저 프로퍼티 반환\nreturn{totalItems:totalItems,currentPage:currentPage,pageSize:pageSize,totalPages:totalPages,startPage:startPage,endPage:endPage,startIndex:startIndex,endIndex:endIndex,pages:pages};}},{key:\"render\",value:function render(){var _this2=this;var pager=this.state.pager;if(!pager.pages||pager.pages.length<=1){// 페이지가 1이면 페이저 디스플레이 안하기\nreturn null;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{className:\"pagination\"},/*#__PURE__*/React.createElement(\"link\",{rel:\"stylesheet\",href:\"https://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\"}),/*#__PURE__*/React.createElement(\"li\",{className:pager.currentPage===1?'disabled':''},/*#__PURE__*/React.createElement(\"a\",{href:\"#page\",onClick:function onClick(){return _this2.setPage(1);}},'<<')),/*#__PURE__*/React.createElement(\"li\",{className:pager.currentPage===1?'disabled':''},/*#__PURE__*/React.createElement(\"a\",{href:\"#page\",onClick:function onClick(){return _this2.setPage(pager.currentPage-1);}},'<')),pager.pages.map(function(page,index){return/*#__PURE__*/React.createElement(\"li\",{key:index,className:pager.currentPage===page?'active':''},/*#__PURE__*/React.createElement(\"a\",{href:\"#page\",onClick:function onClick(){return _this2.setPage(page);}},page));}),/*#__PURE__*/React.createElement(\"li\",{className:pager.currentPage===pager.totalPages?'disabled':''},/*#__PURE__*/React.createElement(\"a\",{href:\"#page\",onClick:function onClick(){return _this2.setPage(pager.currentPage+1);}},'>')),/*#__PURE__*/React.createElement(\"li\",{className:pager.currentPage===pager.totalPages?'disabled':''},/*#__PURE__*/React.createElement(\"a\",{href:\"#page\",onClick:function onClick(){return _this2.setPage(pager.totalPages);}},'>>'))));}}]);return Pagination;}(React.Component);Pagination.defaultProps=defaultProps;export default Pagination;","map":{"version":3,"sources":["/Users/iden/Desktop/Projects/carillon_codestates/client/src/components/Pagination.js"],"names":["React","defaultProps","initialPage","pageSize","Pagination","props","state","pager","items","length","setPage","prevProps","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","defaultNum","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n};\n\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 5,\n};\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // 데이터 배열이 있을 때, 페이지 셋업\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // 데이터 배열이 변하면 페이지도 리셋\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage(page) {\n    let { items, pageSize } = this.props;\n    let pager = this.state.pager;\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    }\n\n    // specified page를 위한 페이저 객체\n    pager = this.getPager(items.length, page, pageSize);\n\n    // 데이터 배열에서 나온 데이터들을 위한 새로운 페이지 만들기\n    let pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n    this.setState({ pager: pager });\n\n    // 부모 컴포넌트에서 페이지바꾸기 함수 불러오기\n    this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    let defaultNum = 10;\n    currentPage = currentPage || 1;\n    pageSize = pageSize || defaultNum;\n\n    // 전체 페이지 계산\n    let totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage, endPage;\n    if (totalPages <= defaultNum) {\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // 페이지 개수 10보다 많으면 개산하고 엔드 페이지\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = defaultNum;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // 데이터 인덱스 엔드\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // 페이지 배열 생성 -> 페이저에서 반복안되게\n    let pages = [...Array(endPage + 1 - startPage).keys()].map(\n      (i) => startPage + i\n    );\n\n    //페이저 프로퍼티 반환\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages,\n    };\n  }\n\n  render() {\n    let pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // 페이지가 1이면 페이저 디스플레이 안하기\n      return null;\n    }\n\n    return (\n      <div>\n        <ul className='pagination'>\n          <link\n            rel='stylesheet'\n            href='https://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css'\n          />\n          <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n            <a href='#page' onClick={() => this.setPage(1)}>\n              {'<<'}\n            </a>\n          </li>\n          <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n            <a href='#page' onClick={() => this.setPage(pager.currentPage - 1)}>\n              {'<'}\n            </a>\n          </li>\n          {pager.pages.map((page, index) => (\n            <li\n              key={index}\n              className={pager.currentPage === page ? 'active' : ''}\n            >\n              <a href='#page' onClick={() => this.setPage(page)}>\n                {page}\n              </a>\n            </li>\n          ))}\n          <li\n            className={pager.currentPage === pager.totalPages ? 'disabled' : ''}\n          >\n            <a href='#page' onClick={() => this.setPage(pager.currentPage + 1)}>\n              {'>'}\n            </a>\n          </li>\n          <li\n            className={pager.currentPage === pager.totalPages ? 'disabled' : ''}\n          >\n            <a href='#page' onClick={() => this.setPage(pager.totalPages)}>\n              {'>>'}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}