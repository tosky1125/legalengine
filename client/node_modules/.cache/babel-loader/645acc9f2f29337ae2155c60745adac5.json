{"ast":null,"code":"var _jsxFileName = \"/Users/iden/Desktop/carillon_codestates/client/src/components/Modal.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nfunction Modal({\n  className,\n  onClose,\n  maskClosable,\n  closable,\n  visible,\n  children\n}) {\n  const onMaskClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose(e);\n    }\n  };\n\n  const close = e => {\n    if (onClose) {\n      onClose(e);\n    }\n  };\n\n  useEffect(() => {\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`;\n    return () => {\n      const scrollY = document.body.style.top;\n      document.body.style.cssText = `position: \"\"; top: \"\";`;\n      window.scrollTo(0, parseInt(scrollY || '0') * -1);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalOverlay, {\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalWrapper, {\n    className: className,\n    onClick: maskClosable ? onMaskClick : null,\n    tabIndex: -1,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalInner, {\n    tabIndex: 0,\n    className: \"modal-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, closable && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modal-close\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://spng.pngfind.com/pngs/s/90-905672_x-cross-close-symbol-icon-button-gui-close.png\",\n    width: \"10px\",\n    height: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })), children)));\n}\n\nModal.defaultProps = {\n  visible: false,\n  closable: true,\n  maskClosable: true\n};\nModal.propTypes = {\n  visible: PropTypes.bool\n};\nconst ModalWrapper = styled.div`\n  box-sizing: border-box;\n  display: ${props => props.visible ? 'block' : 'none'};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: 0;\n`;\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  display: ${props => props.visible ? 'block' : 'none'};\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #fff;\n  border-radius: 10px;\n  width: 360px;\n  max-width: 480px;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\nexport default Modal;","map":{"version":3,"sources":["/Users/iden/Desktop/carillon_codestates/client/src/components/Modal.js"],"names":["React","useEffect","PropTypes","styled","Modal","className","onClose","maskClosable","closable","visible","children","onMaskClick","e","target","currentTarget","close","document","body","style","cssText","window","scrollY","top","scrollTo","parseInt","defaultProps","propTypes","bool","ModalWrapper","div","props","ModalOverlay","ModalInner"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nfunction Modal({\n  className,\n  onClose,\n  maskClosable,\n  closable,\n  visible,\n  children,\n}) {\n  const onMaskClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose(e);\n    }\n  };\n\n  const close = (e) => {\n    if (onClose) {\n      onClose(e);\n    }\n  };\n\n  useEffect(() => {\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`;\n    return () => {\n      const scrollY = document.body.style.top;\n      document.body.style.cssText = `position: \"\"; top: \"\";`;\n      window.scrollTo(0, parseInt(scrollY || '0') * -1);\n    };\n  }, []);\n\n  return (\n    <>\n      <ModalOverlay visible={visible} />\n      <ModalWrapper\n        className={className}\n        onClick={maskClosable ? onMaskClick : null}\n        tabIndex={-1}\n        visible={visible}\n      >\n        <ModalInner tabIndex={0} className='modal-inner'>\n          {closable && (\n            <button className='modal-close' onClick={close}>\n              <img\n                src='https://spng.pngfind.com/pngs/s/90-905672_x-cross-close-symbol-icon-button-gui-close.png'\n                width='10px'\n                height='10px'\n              />\n            </button>\n          )}\n          {children}\n        </ModalInner>\n      </ModalWrapper>\n    </>\n  );\n}\n\nModal.defaultProps = {\n  visible: false,\n  closable: true,\n  maskClosable: true,\n};\n\nModal.propTypes = {\n  visible: PropTypes.bool,\n};\n\nconst ModalWrapper = styled.div`\n  box-sizing: border-box;\n  display: ${(props) => (props.visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: 0;\n`;\n\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  display: ${(props) => (props.visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\n\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #fff;\n  border-radius: 10px;\n  width: 360px;\n  max-width: 480px;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}