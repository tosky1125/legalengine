{"ast":null,"code":"var _jsxFileName = \"/Users/iden/Desktop/carillon_codestates/client/src/components/iden.js\";\nimport React, { useRef } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport { format } from 'date-fns';\nimport './ConvertToPDF.css';\n\nfunction iden() {\n  let law = JSON.parse(localStorage.Law);\n  let {\n    Chapter\n  } = law;\n  Chapter = Chapter.map((chapEle, chapEleIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: chapEleIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"pdf-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, chapEle.context), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"pdf-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, chapEle.date), chapEle.Article && chapEle.Article.map((artEle, artEleIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: artEleIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"pdf-article-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, artEle.article_title, \"\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, artEle.context), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pdf-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, artEle.cont_date)), artEle.Clause && artEle.Clause.map((claEle, claEleIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: claEleIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pdf-clause-context\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }\n  }, claEle.context, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pdf-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, claEle.date)), claEle.subPara && claEle.subPara.map((subEle, subEleIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: subEleIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pdf-sub-context\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, subEle.context), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pdf-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, subEle.date), subEle.Item && subEle.Item.map((itEle, itEleIndex) => {\n    if (itEle.context.includes('http')) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        key: itEleIndex,\n        className: \"pdf-img\",\n        src: itEle.context,\n        alt: itEle.context,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: itEleIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pdf-item-context\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }\n      }, itEle.context), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pdf-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 35\n        }\n      }, itEle.date));\n    }\n  }))))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pdf-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, artEle.date)))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pdf-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pdf-law-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, law.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pdf-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"[\\uC2DC\\uD589 \", format(new Date(law.enforcement_date), 'yyyy.MM.dd.'), \"] [\", law.type, \"\\xA0\", law.number, \"\\uD638,\\xA0\", format(new Date(law.promulgation_date), 'yyyy.MM.dd.'), \",\\xA0\", law.amendment_status, \"]\")), Chapter)));\n}\n\n;\n\nconst Example = () => {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"iden\", {\n    ref: componentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Print this out!\"));\n};\n\nexport default iden;","map":{"version":3,"sources":["/Users/iden/Desktop/carillon_codestates/client/src/components/iden.js"],"names":["React","useRef","useReactToPrint","format","iden","law","JSON","parse","localStorage","Law","Chapter","map","chapEle","chapEleIndex","context","date","Article","artEle","artEleIndex","article_title","cont_date","Clause","claEle","claEleIndex","subPara","subEle","subEleIndex","Item","itEle","itEleIndex","includes","position","top","name","Date","enforcement_date","type","number","promulgation_date","amendment_status","Example","componentRef","handlePrint","content","current"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport { format } from 'date-fns';\nimport './ConvertToPDF.css';\n \nfunction iden () {\n  let law = JSON.parse(localStorage.Law);\n  let { Chapter } = law;\n  Chapter = Chapter.map((chapEle, chapEleIndex) => (\n    <div key={chapEleIndex}>\n      <h1 className='pdf-title'>{chapEle.context}</h1>\n      <h2 className='pdf-title'>{chapEle.date}</h2>\n      {chapEle.Article &&\n        chapEle.Article.map((artEle, artEleIndex) => (\n          <div key={artEleIndex}>\n            <h3 className='pdf-article-title'>\n              {artEle.article_title}&nbsp;&nbsp;\n            </h3>\n            <p>\n              <span>{artEle.context}</span>\n              <span className='pdf-date'>{artEle.cont_date}</span>\n            </p>\n            {artEle.Clause &&\n              artEle.Clause.map((claEle, claEleIndex) => (\n                <div key={claEleIndex}>\n                  <span className='pdf-clause-context'>\n                    {claEle.context}\n                    <span className='pdf-date'>{claEle.date}</span>\n                  </span>\n                  {claEle.subPara &&\n                    claEle.subPara.map((subEle, subEleIndex) => (\n                      <div key={subEleIndex}>\n                        <span className='pdf-sub-context'>\n                          {subEle.context}\n                        </span>\n                        <span className='pdf-date'>{subEle.date}</span>\n                        {subEle.Item &&\n                          subEle.Item.map((itEle, itEleIndex) => {\n                            if (itEle.context.includes('http')) {\n                              return (\n                                <img\n                                  key={itEleIndex}\n                                  className='pdf-img'\n                                  src={itEle.context}\n                                  alt={itEle.context}\n                                ></img>\n                              );\n                            } else {\n                              return (\n                                <div key={itEleIndex}>\n                                  <span className='pdf-item-context'>\n                                    {itEle.context}\n                                  </span>\n                                  <span className='pdf-date'>{itEle.date}</span>\n                                </div>\n                              );\n                            }\n                          })}\n                      </div>\n                    ))}\n                </div>\n              ))}\n            <p className='pdf-date'>{artEle.date}</p>\n          </div>\n        ))}\n    </div>\n  ));\n  return (\n    <div>\n      <div style={{ position: 'absolute', top: 0 }}>\n          <div className='pdf-container'>\n            <div className='pdf-law-head'>\n              <h1>{law.name}</h1>\n              <p className='pdf-date'>\n                [시행 {format(new Date(law.enforcement_date), 'yyyy.MM.dd.')}] [\n                {law.type}&nbsp;\n                {law.number}호,&nbsp;\n                {format(new Date(law.promulgation_date), 'yyyy.MM.dd.')}\n                ,&nbsp;\n                {law.amendment_status}]\n              </p>\n            </div>\n            {Chapter}\n          </div>\n      </div>\n    </div>\n  );\n};\nconst Example = () => {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  return (\n    <div>\n          <iden ref={componentRef} />\n          <button onClick={handlePrint}>Print this out!</button>\n        </div>\n  );\n}\n\nexport default iden;"]},"metadata":{},"sourceType":"module"}