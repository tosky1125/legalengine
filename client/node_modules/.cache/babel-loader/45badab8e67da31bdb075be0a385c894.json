{"ast":null,"code":"var _jsxFileName = \"/Users/iden/Desktop/Projects/carillon_codestates/client/src/components/Pagination.js\";\nimport React from 'react';\nimport './Pagination.css';\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 5\n};\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentDidMount() {\n    // 데이터 배열이 있을 때, 페이지 셋업\n    const {\n      items,\n      initialPage\n    } = this.props;\n\n    if (items && items.length) {\n      this.setPage(initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // 데이터 배열이 변하면 페이지도 리셋\n    const {\n      items,\n      initialPage\n    } = this.props;\n\n    if (items !== prevProps.items) {\n      this.setPage(initialPage);\n    }\n  }\n\n  getPager(totalItems, currentPageParam, pageSizeParam) {\n    const defaultNum = 10;\n    const currentPage = currentPageParam || 1;\n    const pageSize = pageSizeParam || defaultNum; // 전체 페이지 계산\n\n    const totalPages = Math.ceil(totalItems / pageSize);\n    let startPage;\n    let endPage;\n\n    if (totalPages <= defaultNum) {\n      startPage = 1;\n      endPage = totalPages;\n    } else if (currentPage <= 6) {\n      startPage = 1;\n      endPage = defaultNum;\n    } else if (currentPage + 4 >= totalPages) {\n      startPage = totalPages - 9;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - 5;\n      endPage = currentPage + 4;\n    } // 데이터 인덱스 엔드\n\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // 페이지 배열 생성 -> 페이저에서 반복안되게\n\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // 페이저 프로퍼티 반환\n\n    return {\n      totalItems,\n      currentPage,\n      pageSize,\n      totalPages,\n      startPage,\n      endPage,\n      startIndex,\n      endIndex,\n      pages\n    };\n  }\n\n  setPage(page) {\n    const {\n      items,\n      pageSize,\n      onChangePage\n    } = this.props;\n    let {\n      pager\n    } = this.state;\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    } // specified page를 위한 페이저 객체\n\n\n    pager = this.getPager(items.length, page, pageSize); // 데이터 배열에서 나온 데이터들을 위한 새로운 페이지 만들기\n\n    const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n    this.setState({\n      pager\n    }); // 부모 컴포넌트에서 페이지바꾸기 함수 불러오기\n\n    onChangePage(pageOfItems);\n  }\n\n  render() {\n    const {\n      pager\n    } = this.state;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // 페이지가 1이면 페이저 디스플레이 안하기\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === 1 ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#page\",\n      onClick: () => this.setPage(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, '<<')), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === 1 ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#page\",\n      onClick: () => this.setPage(pager.currentPage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, '<')), pager.pages.map((page, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: pager.currentPage === page ? 'active' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#page\",\n      onClick: () => this.setPage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, page))), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#page\",\n      onClick: () => this.setPage(pager.currentPage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, '>')), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#page\",\n      onClick: () => this.setPage(pager.totalPages),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, '>>'))));\n  }\n\n}\n\nPagination.defaultProps = defaultProps;\nexport default Pagination;","map":{"version":3,"sources":["/Users/iden/Desktop/Projects/carillon_codestates/client/src/components/Pagination.js"],"names":["React","defaultProps","initialPage","pageSize","Pagination","Component","constructor","props","state","pager","componentDidMount","items","length","setPage","componentDidUpdate","prevProps","getPager","totalItems","currentPageParam","pageSizeParam","defaultNum","currentPage","totalPages","Math","ceil","startPage","endPage","startIndex","endIndex","min","pages","Array","keys","map","i","page","onChangePage","pageOfItems","slice","setState","render","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Pagination.css';\n\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 5,\n};\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // 데이터 배열이 있을 때, 페이지 셋업\n    const { items, initialPage } = this.props;\n    if (items && items.length) {\n      this.setPage(initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // 데이터 배열이 변하면 페이지도 리셋\n    const { items, initialPage } = this.props;\n    if (items !== prevProps.items) {\n      this.setPage(initialPage);\n    }\n  }\n\n  getPager(totalItems, currentPageParam, pageSizeParam) {\n    const defaultNum = 10;\n    const currentPage = currentPageParam || 1;\n    const pageSize = pageSizeParam || defaultNum;\n    // 전체 페이지 계산\n    const totalPages = Math.ceil(totalItems / pageSize);\n    let startPage; let\n      endPage;\n    if (totalPages <= defaultNum) {\n      startPage = 1;\n      endPage = totalPages;\n    } else if (currentPage <= 6) {\n      startPage = 1;\n      endPage = defaultNum;\n    } else if (currentPage + 4 >= totalPages) {\n      startPage = totalPages - 9;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - 5;\n      endPage = currentPage + 4;\n    }\n    // 데이터 인덱스 엔드\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n    // 페이지 배열 생성 -> 페이저에서 반복안되게\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      (i) => startPage + i,\n    );\n    // 페이저 프로퍼티 반환\n    return {\n      totalItems,\n      currentPage,\n      pageSize,\n      totalPages,\n      startPage,\n      endPage,\n      startIndex,\n      endIndex,\n      pages,\n    };\n  }\n\n  setPage(page) {\n    const { items, pageSize, onChangePage } = this.props;\n    let { pager } = this.state;\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    }\n    // specified page를 위한 페이저 객체\n    pager = this.getPager(items.length, page, pageSize);\n    // 데이터 배열에서 나온 데이터들을 위한 새로운 페이지 만들기\n    const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n    this.setState({ pager });\n    // 부모 컴포넌트에서 페이지바꾸기 함수 불러오기\n    onChangePage(pageOfItems);\n  }\n\n  render() {\n    const { pager } = this.state;\n    if (!pager.pages || pager.pages.length <= 1) {\n      // 페이지가 1이면 페이저 디스플레이 안하기\n      return null;\n    }\n    return (\n      <div>\n        <ul className='pagination'>\n          <link\n            rel='stylesheet'\n            href='https://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css'\n          />\n          <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n            <a href='#page' onClick={() => this.setPage(1)}>\n              {'<<'}\n            </a>\n          </li>\n          <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n            <a href='#page' onClick={() => this.setPage(pager.currentPage - 1)}>\n              {'<'}\n            </a>\n          </li>\n          {pager.pages.map((page, index) => (\n            <li\n              key={index}\n              className={pager.currentPage === page ? 'active' : ''}\n            >\n              <a href='#page' onClick={() => this.setPage(page)}>\n                {page}\n              </a>\n            </li>\n          ))}\n          <li\n            className={pager.currentPage === pager.totalPages ? 'disabled' : ''}\n          >\n            <a href='#page' onClick={() => this.setPage(pager.currentPage + 1)}>\n              {'>'}\n            </a>\n          </li>\n          <li\n            className={pager.currentPage === pager.totalPages ? 'disabled' : ''}\n          >\n            <a href='#page' onClick={() => this.setPage(pager.totalPages)}>\n              {'>>'}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nPagination.defaultProps = defaultProps;\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}