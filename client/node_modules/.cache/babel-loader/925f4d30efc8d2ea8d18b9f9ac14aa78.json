{"ast":null,"code":"import _slicedToArray from\"/Users/iden/Desktop/Projects/carillon_codestates/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useForm}from'react-hook-form';import axios from'axios';import'./SearchBar.css';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import{format}from'date-fns';import{Col,Container}from'react-bootstrap';import*as _searchList from'../modules/SearchList';import*as _searchWord from'../modules/SearchWord';function SearchBar(props){// 유저 입력값인 검색어와 날짜를 word, searchDate 스테이트로 받기\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoaded=_useState4[0],setisLoaded=_useState4[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var today=format(new Date(),'yyyy-MM-dd');var _useState5=useState(today),_useState6=_slicedToArray(_useState5,2),searchDate=_useState6[0],setSearchDate=_useState6[1];// 값이 입력되면 스테이트값 변경\nvar handleChangeTerm=function handleChangeTerm(e){setWord(e.target.value);};var handleChangeDate=function handleChangeDate(e){setSearchDate(e.target.value);};// 검색 버튼 클릭시 값이 변경된 스테이트를 서버에 전달\nvar handleSearch=function handleSearch(){var payload={searchWord:word,date:searchDate};var searchList=props.searchList,history=props.history,searchWord=props.searchWord;searchWord(word);axios.post('http://13.125.112.243/search',payload).then(function(res){searchList(res.data);setisLoaded(true);}).then(function(){history.push('/search');}).catch(function(err){if(err.res){console.log(err.res.data);console.log(err.res.status);console.log(err.res.headers);}else if(err.req){console.log(err.req);}else{console.log('Error',err.message);}console.log(err.config);});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"searchbar-container\"},/*#__PURE__*/React.createElement(Col,{md:2}),/*#__PURE__*/React.createElement(\"form\",{className:\"searchbar-form\",autoComplete:\"off\",onSubmit:handleSubmit(handleSearch)},/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(\"div\",{className:\"searchbar-box\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"setWord\",className:\"searchbar-box-word\",ref:register({required:true,minLength:2,pattern:/^[ㄱ-ㅎ|가-힣|a-z|A-Z|  0-9|*+$]/}),placeholder:\"\\uBC95\\uB839\\uC744 \\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694.\",onChange:handleChangeTerm}),/*#__PURE__*/React.createElement(\"input\",{type:\"date\",name:\"date\",className:\"searchbar-box-calendar\",value:searchDate,onChange:handleChangeDate}),/*#__PURE__*/React.createElement(\"button\",{className:\"searchbar-btn\",type:\"submit\"},\"\\uAC80\\uC0C9\")),/*#__PURE__*/React.createElement(\"p\",{className:\"valid-error\"},errors.setWord&&'문자와 숫자 2글자 이상 입력해주세요.')),/*#__PURE__*/React.createElement(Col,{md:2})))));}export default connect(function(state){return{seachlist:state.searchList.seachList,searchWord:state.searchWord.searchWord};},function(dispatch){return{searchList:function searchList(data){return dispatch(_searchList.searchList(data));},searchWord:function searchWord(data){return dispatch(_searchWord.searchWord(data));}};})(withRouter(SearchBar));","map":{"version":3,"sources":["/Users/iden/Desktop/Projects/carillon_codestates/client/src/components/SearchBar.js"],"names":["React","useState","useForm","axios","connect","withRouter","format","Col","Container","searchList","searchWord","SearchBar","props","word","setWord","isLoaded","setisLoaded","register","handleSubmit","errors","today","Date","searchDate","setSearchDate","handleChangeTerm","e","target","value","handleChangeDate","handleSearch","payload","date","history","post","then","res","data","push","catch","err","console","log","status","headers","req","message","config","required","minLength","pattern","state","seachlist","seachList","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport './SearchBar.css';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { Col, Container } from 'react-bootstrap';\nimport * as searchList from '../modules/SearchList';\nimport * as searchWord from '../modules/SearchWord';\n\nfunction SearchBar(props) {\n  // 유저 입력값인 검색어와 날짜를 word, searchDate 스테이트로 받기\n  const [word, setWord] = useState('');\n  const [isLoaded, setisLoaded] = useState(false);\n  const { register, handleSubmit, errors } = useForm();\n\n  const today = format(new Date(), 'yyyy-MM-dd');\n  const [searchDate, setSearchDate] = useState(today);\n  // 값이 입력되면 스테이트값 변경\n  const handleChangeTerm = (e) => {\n    setWord(e.target.value);\n  };\n  const handleChangeDate = (e) => {\n    setSearchDate(e.target.value);\n  };\n  // 검색 버튼 클릭시 값이 변경된 스테이트를 서버에 전달\n  const handleSearch = () => {\n    const payload = { searchWord: word, date: searchDate };\n    const { searchList, history, searchWord } = props;\n    searchWord(word);\n\n    axios\n      .post('http://13.125.112.243/search', payload)\n      .then((res) => {\n        searchList(res.data);\n        setisLoaded(true);\n      })\n      .then(() => {\n        history.push('/search');\n      })\n      .catch((err) => {\n        if (err.res) {\n          console.log(err.res.data);\n          console.log(err.res.status);\n          console.log(err.res.headers);\n        } else if (err.req) {\n          console.log(err.req);\n        } else {\n          console.log('Error', err.message);\n        }\n        console.log(err.config);\n      });\n  };\n\n  return (\n    <div>\n      <Container>\n        <div className='searchbar-container'>\n          <Col md={2} />\n          <form\n            className='searchbar-form'\n            autoComplete='off'\n            onSubmit={handleSubmit(handleSearch)}\n          >\n            <Col md={8}>\n              <div className='searchbar-box'>\n                <input\n                  type='text'\n                  name='setWord'\n                  className='searchbar-box-word'\n                  ref={register({\n                    required: true,\n                    minLength: 2,\n                    pattern: /^[ㄱ-ㅎ|가-힣|a-z|A-Z|  0-9|*+$]/,\n                  })}\n                  placeholder='법령을 검색해보세요.'\n                  onChange={handleChangeTerm}\n                />\n                <input\n                  type='date'\n                  name='date'\n                  className='searchbar-box-calendar'\n                  value={searchDate}\n                  onChange={handleChangeDate}\n                />\n                <button className='searchbar-btn' type='submit'>\n                  검색\n                </button>\n              </div>\n              <p className='valid-error'>\n                {errors.setWord && '문자와 숫자 2글자 이상 입력해주세요.'}\n              </p>\n            </Col>\n            <Col md={2} />\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default connect(\n  (state) => ({\n    seachlist: state.searchList.seachList,\n    searchWord: state.searchWord.searchWord,\n  }),\n  (dispatch) => ({\n    searchList: (data) => dispatch(searchList.searchList(data)),\n    searchWord: (data) => dispatch(searchWord.searchWord(data)),\n  }),\n)(withRouter(SearchBar));\n"]},"metadata":{},"sourceType":"module"}